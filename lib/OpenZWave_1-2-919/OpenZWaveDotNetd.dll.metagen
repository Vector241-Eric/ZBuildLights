ImageRuntimeVersion: v4.0.30319
Assembly OpenZWaveDotNetd, Version=1.0.*, Culture=Invariant Language (Invariant Country): 
	hash=SHA1, flags=PublicKey
Assembly mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Class OpenZWaveDotNet.ZWValueID: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(OpenZWave.ValueID*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(UInt32, Byte, ValueGenre, Byte, Byte, Byte, ValueType, Byte): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Methods:
    CreateUnmanagedValueID(ValueID*): PrivateScope, Public, HideBySig
    GetHomeId(): PrivateScope, Public, HideBySig
    GetNodeId(): PrivateScope, Public, HideBySig
    GetGenre(): PrivateScope, Public, HideBySig
    GetCommandClassId(): PrivateScope, Public, HideBySig
    GetInstance(): PrivateScope, Public, HideBySig
    GetIndex(): PrivateScope, Public, HideBySig
    GetType(): PrivateScope, Public, HideBySig
    GetId(): PrivateScope, Public, HideBySig
    op_Equality(ZWValueID): PrivateScope, Public, HideBySig, SpecialName
    op_Inequality(ZWValueID): PrivateScope, Public, HideBySig, SpecialName
    op_LessThan(ZWValueID): PrivateScope, Public, HideBySig, SpecialName
    op_GreaterThan(ZWValueID): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Struct OpenZWaveDotNet.ZWValueID+ValueGenre: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    ValueGenre Basic = 0 : Public, Static, Literal, HasDefault
    ValueGenre User = 1 : Public, Static, Literal, HasDefault
    ValueGenre Config = 2 : Public, Static, Literal, HasDefault
    ValueGenre System = 3 : Public, Static, Literal, HasDefault
Struct OpenZWaveDotNet.ZWValueID+ValueType: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    ValueType Bool = 0 : Public, Static, Literal, HasDefault
    ValueType Byte = 1 : Public, Static, Literal, HasDefault
    ValueType Decimal = 2 : Public, Static, Literal, HasDefault
    ValueType Int = 3 : Public, Static, Literal, HasDefault
    ValueType List = 4 : Public, Static, Literal, HasDefault
    ValueType Schedule = 5 : Public, Static, Literal, HasDefault
    ValueType Short = 6 : Public, Static, Literal, HasDefault
    ValueType String = 7 : Public, Static, Literal, HasDefault
    ValueType Button = 8 : Public, Static, Literal, HasDefault
    ValueType Raw = 9 : Public, Static, Literal, HasDefault
Class OpenZWaveDotNet.ZWNotification: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(OpenZWave.Notification*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetType(): PrivateScope, Public, HideBySig
    GetHomeId(): PrivateScope, Public, HideBySig
    GetNodeId(): PrivateScope, Public, HideBySig
    GetValueID(): PrivateScope, Public, HideBySig
    GetGroupIdx(): PrivateScope, Public, HideBySig
    GetEvent(): PrivateScope, Public, HideBySig
    GetByte(): PrivateScope, Public, HideBySig
Struct OpenZWaveDotNet.ZWNotification+Type: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Type ValueAdded = 0 : Public, Static, Literal, HasDefault
    Type ValueRemoved = 1 : Public, Static, Literal, HasDefault
    Type ValueChanged = 2 : Public, Static, Literal, HasDefault
    Type ValueRefreshed = 3 : Public, Static, Literal, HasDefault
    Type Group = 4 : Public, Static, Literal, HasDefault
    Type NodeNew = 5 : Public, Static, Literal, HasDefault
    Type NodeAdded = 6 : Public, Static, Literal, HasDefault
    Type NodeRemoved = 7 : Public, Static, Literal, HasDefault
    Type NodeProtocolInfo = 8 : Public, Static, Literal, HasDefault
    Type NodeNaming = 9 : Public, Static, Literal, HasDefault
    Type NodeEvent = 10 : Public, Static, Literal, HasDefault
    Type PollingDisabled = 11 : Public, Static, Literal, HasDefault
    Type PollingEnabled = 12 : Public, Static, Literal, HasDefault
    Type SceneEvent = 13 : Public, Static, Literal, HasDefault
    Type CreateButton = 14 : Public, Static, Literal, HasDefault
    Type DeleteButton = 15 : Public, Static, Literal, HasDefault
    Type ButtonOn = 16 : Public, Static, Literal, HasDefault
    Type ButtonOff = 17 : Public, Static, Literal, HasDefault
    Type DriverReady = 18 : Public, Static, Literal, HasDefault
    Type DriverFailed = 19 : Public, Static, Literal, HasDefault
    Type DriverReset = 20 : Public, Static, Literal, HasDefault
    Type EssentialNodeQueriesComplete = 21 : Public, Static, Literal, HasDefault
    Type NodeQueriesComplete = 22 : Public, Static, Literal, HasDefault
    Type AwakeNodesQueried = 23 : Public, Static, Literal, HasDefault
    Type AllNodesQueried = 25 : Public, Static, Literal, HasDefault
    Type AllNodesQueriedSomeDead = 24 : Public, Static, Literal, HasDefault
    Type Notification = 26 : Public, Static, Literal, HasDefault
Struct OpenZWaveDotNet.ZWNotification+Code: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Code MsgComplete = 0 : Public, Static, Literal, HasDefault
    Code Timeout = 1 : Public, Static, Literal, HasDefault
    Code NoOperation = 2 : Public, Static, Literal, HasDefault
    Code Awake = 3 : Public, Static, Literal, HasDefault
    Code Sleep = 4 : Public, Static, Literal, HasDefault
    Code Dead = 5 : Public, Static, Literal, HasDefault
    Code Alive = 6 : Public, Static, Literal, HasDefault
Class OpenZWaveDotNet.ManagedNotificationsHandler: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, SpecialName, RTSpecialName
  Methods:
    Invoke(ZWNotification): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    BeginInvoke(ZWNotification, AsyncCallback, Object): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Final, Virtual, VtableLayoutMask
Class OpenZWaveDotNet.ManagedControllerStateChangedHandler: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, SpecialName, RTSpecialName
  Methods:
    Invoke(ZWControllerState): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    BeginInvoke(ZWControllerState, AsyncCallback, Object): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Final, Virtual, VtableLayoutMask
Class OpenZWaveDotNet.ZWManager: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    OpenZWaveDotNet.ManagedControllerStateChangedHandler OnControllerStateChanged 'get set' : 
    OpenZWaveDotNet.ManagedNotificationsHandler OnNotification 'get set' : 
  Methods:
    PressButton(ZWValueID): PrivateScope, Public, HideBySig
    ReleaseButton(ZWValueID): PrivateScope, Public, HideBySig
    GetNumSwitchPoints(ZWValueID): PrivateScope, Public, HideBySig
    SetSwitchPoint(ZWValueID, Byte, Byte, SByte): PrivateScope, Public, HideBySig
    RemoveSwitchPoint(ZWValueID, Byte, Byte): PrivateScope, Public, HideBySig
    ClearSwitchPoints(ZWValueID): PrivateScope, Public, HideBySig
    GetSwitchPoint(ZWValueID, Byte, Byte&(Out), Byte&(Out), SByte&(Out)): PrivateScope, Public, HideBySig
    SwitchAllOn(UInt32): PrivateScope, Public, HideBySig
    SwitchAllOff(UInt32): PrivateScope, Public, HideBySig
    SetConfigParam(UInt32, Byte, Byte, Int32): PrivateScope, Public, HideBySig
    RequestConfigParam(UInt32, Byte, Byte): PrivateScope, Public, HideBySig
    RequestAllConfigParams(UInt32, Byte): PrivateScope, Public, HideBySig
    GetNumGroups(UInt32, Byte): PrivateScope, Public, HideBySig
    GetAssociations(UInt32 IsConst, Byte IsConst, Byte IsConst, Byte[]&(Out)): PrivateScope, Public, HideBySig
    GetMaxAssociations(UInt32 IsConst, Byte IsConst, Byte IsConst): PrivateScope, Public, HideBySig
    AddAssociation(UInt32, Byte, Byte, Byte): PrivateScope, Public, HideBySig
    RemoveAssociation(UInt32, Byte, Byte, Byte): PrivateScope, Public, HideBySig
    ResetController(UInt32): PrivateScope, Public, HideBySig
    SoftReset(UInt32): PrivateScope, Public, HideBySig
    BeginControllerCommand(UInt32, ZWControllerCommand, Boolean(HasFieldMarshal), Byte): PrivateScope, Public, HideBySig
    CancelControllerCommand(UInt32): PrivateScope, Public, HideBySig
    TestNetworkNode(UInt32 IsConst, Byte IsConst, UInt32 IsConst): PrivateScope, Public, HideBySig
    TestNetwork(UInt32 IsConst, UInt32 IsConst): PrivateScope, Public, HideBySig
    HealNetworkNode(UInt32 IsConst, Byte IsConst, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    HealNetwork(UInt32 IsConst, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    GetNumScenes(): PrivateScope, Public, HideBySig
    GetAllScenes(Byte[](Out)): PrivateScope, Public, HideBySig
    CreateScene(): PrivateScope, Public, HideBySig
    RemoveScene(Byte): PrivateScope, Public, HideBySig
    AddSceneValue(Byte, ZWValueID, String): PrivateScope, Public, HideBySig
    AddSceneValue(Byte, ZWValueID, Int16 IsConst): PrivateScope, Public, HideBySig
    AddSceneValue(Byte, ZWValueID, Int32 IsConst): PrivateScope, Public, HideBySig
    AddSceneValue(Byte, ZWValueID, Single IsConst): PrivateScope, Public, HideBySig
    AddSceneValue(Byte, ZWValueID, Byte): PrivateScope, Public, HideBySig
    AddSceneValue(Byte, ZWValueID, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    AddSceneValueListSelection(Byte, ZWValueID, Int32): PrivateScope, Public, HideBySig
    AddSceneValueListSelection(Byte, ZWValueID, String): PrivateScope, Public, HideBySig
    RemoveSceneValue(Byte, ZWValueID): PrivateScope, Public, HideBySig
    SceneGetValues(Byte, ZWValueID[]&(Out)): PrivateScope, Public, HideBySig
    SceneGetValueAsBool(Byte, ZWValueID, Boolean&(Out)): PrivateScope, Public, HideBySig
    SceneGetValueAsByte(Byte, ZWValueID, Byte&(Out)): PrivateScope, Public, HideBySig
    SceneGetValueAsDecimal(Byte, ZWValueID, Decimal&(Out)): PrivateScope, Public, HideBySig
    SceneGetValueAsInt(Byte, ZWValueID, Int32&(Out)): PrivateScope, Public, HideBySig
    SceneGetValueAsShort(Byte, ZWValueID, Int16&(Out)): PrivateScope, Public, HideBySig
    SceneGetValueAsString(Byte, ZWValueID, String&(Out)): PrivateScope, Public, HideBySig
    SceneGetValueListSelection(Byte, ZWValueID, Int32&): PrivateScope, Public, HideBySig
    SceneGetValueListSelection(Byte, ZWValueID, String&(Out)): PrivateScope, Public, HideBySig
    SetSceneValue(Byte, ZWValueID, String): PrivateScope, Public, HideBySig
    SetSceneValue(Byte, ZWValueID, Int16): PrivateScope, Public, HideBySig
    SetSceneValue(Byte, ZWValueID, Int32): PrivateScope, Public, HideBySig
    SetSceneValue(Byte, ZWValueID, Single): PrivateScope, Public, HideBySig
    SetSceneValue(Byte, ZWValueID, Byte): PrivateScope, Public, HideBySig
    SetSceneValue(Byte, ZWValueID, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    SetSceneValueListSelection(Byte, ZWValueID, Int32): PrivateScope, Public, HideBySig
    SetSceneValueListSelection(Byte, ZWValueID, String): PrivateScope, Public, HideBySig
    GetSceneLabel(Byte): PrivateScope, Public, HideBySig
    SetSceneLabel(Byte, String): PrivateScope, Public, HideBySig
    SceneExists(Byte): PrivateScope, Public, HideBySig
    ActivateScene(Byte): PrivateScope, Public, HideBySig
    get_OnNotification(): PrivateScope, Public, HideBySig, SpecialName
    set_OnNotification(ManagedNotificationsHandler): PrivateScope, Public, HideBySig, SpecialName
    get_OnControllerStateChanged(): PrivateScope, Public, HideBySig, SpecialName
    set_OnControllerStateChanged(ManagedControllerStateChangedHandler): PrivateScope, Public, HideBySig, SpecialName
    Create(): PrivateScope, Public, HideBySig
    Destroy(): PrivateScope, Public, HideBySig
    SetLoggingState(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    GetLoggingState(): PrivateScope, Public, HideBySig
    SetLogFileName(String): PrivateScope, Public, HideBySig
    LogDriverStatistics(UInt32): PrivateScope, Public, HideBySig
    WriteConfig(UInt32): PrivateScope, Public, HideBySig
    AddDriver(String, ZWControllerInterface): PrivateScope, Public, HideBySig
    AddDriver(String): PrivateScope, Public, HideBySig
    RemoveDriver(String): PrivateScope, Public, HideBySig
    GetControllerNodeId(UInt32): PrivateScope, Public, HideBySig
    IsPrimaryController(UInt32): PrivateScope, Public, HideBySig
    IsStaticUpdateController(UInt32): PrivateScope, Public, HideBySig
    IsBridgeController(UInt32 IsConst): PrivateScope, Public, HideBySig
    GetLibraryVersion(UInt32 IsConst): PrivateScope, Public, HideBySig
    GetLibraryTypeName(UInt32 IsConst): PrivateScope, Public, HideBySig
    GetSendQueueCount(UInt32 IsConst): PrivateScope, Public, HideBySig
    SetPollInterval(Int32, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    EnablePoll(ZWValueID): PrivateScope, Public, HideBySig
    DisablePoll(ZWValueID): PrivateScope, Public, HideBySig
    RefreshNodeInfo(UInt32, Byte): PrivateScope, Public, HideBySig
    RequestNodeState(UInt32, Byte): PrivateScope, Public, HideBySig
    RequestNodeDynamic(UInt32 IsConst, Byte IsConst): PrivateScope, Public, HideBySig
    IsNodeListeningDevice(UInt32 IsConst, Byte IsConst): PrivateScope, Public, HideBySig
    IsNodeFrequentListeningDevice(UInt32 IsConst, Byte IsConst): PrivateScope, Public, HideBySig
    IsNodeBeamingDevice(UInt32 IsConst, Byte IsConst): PrivateScope, Public, HideBySig
    IsNodeRoutingDevice(UInt32 IsConst, Byte IsConst): PrivateScope, Public, HideBySig
    IsNodeSecurityDevice(UInt32 IsConst, Byte IsConst): PrivateScope, Public, HideBySig
    GetNodeMaxBaudRate(UInt32 IsConst, Byte IsConst): PrivateScope, Public, HideBySig
    GetNodeVersion(UInt32 IsConst, Byte IsConst): PrivateScope, Public, HideBySig
    GetNodeSecurity(UInt32 IsConst, Byte IsConst): PrivateScope, Public, HideBySig
    GetNodeBasic(UInt32, Byte): PrivateScope, Public, HideBySig
    GetNodeGeneric(UInt32, Byte): PrivateScope, Public, HideBySig
    GetNodeSpecific(UInt32, Byte): PrivateScope, Public, HideBySig
    GetNodeType(UInt32, Byte): PrivateScope, Public, HideBySig
    GetNodeNeighbors(UInt32 IsConst, Byte IsConst, Byte[]&(Out)): PrivateScope, Public, HideBySig
    GetNodeManufacturerName(UInt32, Byte): PrivateScope, Public, HideBySig
    GetNodeProductName(UInt32, Byte): PrivateScope, Public, HideBySig
    GetNodeName(UInt32, Byte): PrivateScope, Public, HideBySig
    GetNodeLocation(UInt32, Byte): PrivateScope, Public, HideBySig
    GetNodeManufacturerId(UInt32, Byte): PrivateScope, Public, HideBySig
    GetNodeProductType(UInt32, Byte): PrivateScope, Public, HideBySig
    GetNodeProductId(UInt32, Byte): PrivateScope, Public, HideBySig
    SetNodeManufacturerName(UInt32, Byte, String): PrivateScope, Public, HideBySig
    SetNodeProductName(UInt32, Byte, String): PrivateScope, Public, HideBySig
    SetNodeName(UInt32, Byte, String): PrivateScope, Public, HideBySig
    SetNodeLocation(UInt32, Byte, String): PrivateScope, Public, HideBySig
    SetNodeOn(UInt32, Byte): PrivateScope, Public, HideBySig
    SetNodeOff(UInt32, Byte): PrivateScope, Public, HideBySig
    SetNodeLevel(UInt32, Byte, Byte): PrivateScope, Public, HideBySig
    GetNodeClassInformation(UInt32, Byte, Byte, String&(Out), Byte&(Out)): PrivateScope, Public, HideBySig
    GetValueLabel(ZWValueID): PrivateScope, Public, HideBySig
    GetValueUnits(ZWValueID): PrivateScope, Public, HideBySig
    GetValueHelp(ZWValueID): PrivateScope, Public, HideBySig
    IsValueReadOnly(ZWValueID): PrivateScope, Public, HideBySig
    IsValueSet(ZWValueID): PrivateScope, Public, HideBySig
    IsValuePolled(ZWValueID): PrivateScope, Public, HideBySig
    GetValueAsBool(ZWValueID, Boolean&(Out)): PrivateScope, Public, HideBySig
    GetValueAsByte(ZWValueID, Byte&(Out)): PrivateScope, Public, HideBySig
    GetValueAsDecimal(ZWValueID, Decimal&(Out)): PrivateScope, Public, HideBySig
    GetValueAsInt(ZWValueID, Int32&(Out)): PrivateScope, Public, HideBySig
    GetValueAsShort(ZWValueID, Int16&(Out)): PrivateScope, Public, HideBySig
    GetValueAsString(ZWValueID, String&(Out)): PrivateScope, Public, HideBySig
    GetValueListSelection(ZWValueID, Int32&(Out)): PrivateScope, Public, HideBySig
    GetValueListSelection(ZWValueID, String&(Out)): PrivateScope, Public, HideBySig
    GetValueListItems(ZWValueID, String[]&(Out)): PrivateScope, Public, HideBySig
    SetValue(ZWValueID, String): PrivateScope, Public, HideBySig
    SetValue(ZWValueID, Int16): PrivateScope, Public, HideBySig
    SetValue(ZWValueID, Int32): PrivateScope, Public, HideBySig
    SetValue(ZWValueID, Single): PrivateScope, Public, HideBySig
    SetValue(ZWValueID, Byte): PrivateScope, Public, HideBySig
    SetValue(ZWValueID, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    SetValueListSelection(ZWValueID, String): PrivateScope, Public, HideBySig
    RefreshValue(ZWValueID): PrivateScope, Public, HideBySig
    SetChangeVerified(ZWValueID, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
Struct OpenZWaveDotNet.ZWLogLevel: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenZWaveDotNet.ZWLogLevel Always = 1 : Public, Static, Literal, HasDefault
    OpenZWaveDotNet.ZWLogLevel None = 0 : Public, Static, Literal, HasDefault
    OpenZWaveDotNet.ZWLogLevel Fatal = 2 : Public, Static, Literal, HasDefault
    OpenZWaveDotNet.ZWLogLevel Error = 3 : Public, Static, Literal, HasDefault
    OpenZWaveDotNet.ZWLogLevel Warning = 4 : Public, Static, Literal, HasDefault
    OpenZWaveDotNet.ZWLogLevel Alert = 5 : Public, Static, Literal, HasDefault
    OpenZWaveDotNet.ZWLogLevel Info = 6 : Public, Static, Literal, HasDefault
    OpenZWaveDotNet.ZWLogLevel Detail = 7 : Public, Static, Literal, HasDefault
    OpenZWaveDotNet.ZWLogLevel Debug = 8 : Public, Static, Literal, HasDefault
Struct OpenZWaveDotNet.ZWControllerState: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenZWaveDotNet.ZWControllerState Normal = 0 : Public, Static, Literal, HasDefault
    OpenZWaveDotNet.ZWControllerState Waiting = 4 : Public, Static, Literal, HasDefault
    OpenZWaveDotNet.ZWControllerState InProgress = 6 : Public, Static, Literal, HasDefault
    OpenZWaveDotNet.ZWControllerState Completed = 7 : Public, Static, Literal, HasDefault
    OpenZWaveDotNet.ZWControllerState Failed = 8 : Public, Static, Literal, HasDefault
    OpenZWaveDotNet.ZWControllerState NodeOK = 9 : Public, Static, Literal, HasDefault
    OpenZWaveDotNet.ZWControllerState NodeFailed = 10 : Public, Static, Literal, HasDefault
Struct OpenZWaveDotNet.ZWControllerInterface: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenZWaveDotNet.ZWControllerInterface Serial = 1 : Public, Static, Literal, HasDefault
    OpenZWaveDotNet.ZWControllerInterface Hid = 2 : Public, Static, Literal, HasDefault
Struct OpenZWaveDotNet.ZWControllerCommand: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenZWaveDotNet.ZWControllerCommand None = 0 : Public, Static, Literal, HasDefault
    OpenZWaveDotNet.ZWControllerCommand AddDevice = 1 : Public, Static, Literal, HasDefault
    OpenZWaveDotNet.ZWControllerCommand CreateNewPrimary = 2 : Public, Static, Literal, HasDefault
    OpenZWaveDotNet.ZWControllerCommand ReceiveConfiguration = 3 : Public, Static, Literal, HasDefault
    OpenZWaveDotNet.ZWControllerCommand RemoveDevice = 4 : Public, Static, Literal, HasDefault
    OpenZWaveDotNet.ZWControllerCommand RemoveFailedNode = 5 : Public, Static, Literal, HasDefault
    OpenZWaveDotNet.ZWControllerCommand HasNodeFailed = 6 : Public, Static, Literal, HasDefault
    OpenZWaveDotNet.ZWControllerCommand ReplaceFailedNode = 7 : Public, Static, Literal, HasDefault
    OpenZWaveDotNet.ZWControllerCommand TransferPrimaryRole = 8 : Public, Static, Literal, HasDefault
    OpenZWaveDotNet.ZWControllerCommand RequestNetworkUpdate = 9 : Public, Static, Literal, HasDefault
    OpenZWaveDotNet.ZWControllerCommand RequestNodeNeighborUpdate = 10 : Public, Static, Literal, HasDefault
    OpenZWaveDotNet.ZWControllerCommand AssignReturnRoute = 11 : Public, Static, Literal, HasDefault
    OpenZWaveDotNet.ZWControllerCommand DeleteAllReturnRoutes = 12 : Public, Static, Literal, HasDefault
Class OpenZWaveDotNet.ZWOptions: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Create(String, String, String): PrivateScope, Public, HideBySig
    Destroy(): PrivateScope, Public, HideBySig
    Lock(): PrivateScope, Public, HideBySig
    AddOptionBool(String, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    AddOptionInt(String, Int32): PrivateScope, Public, HideBySig
    AddOptionString(String, String, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    GetOptionAsBool(String, Boolean&(Out)): PrivateScope, Public, HideBySig
    GetOptionAsInt(String, Int32&(Out)): PrivateScope, Public, HideBySig
    GetOptionAsString(String, String&(Out)): PrivateScope, Public, HideBySig
    GetOptionType(String): PrivateScope, Public, HideBySig
    AreLocked(): PrivateScope, Public, HideBySig
Struct OpenZWaveDotNet.ZWOptionType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    OpenZWaveDotNet.ZWOptionType Invalid = 0 : Public, Static, Literal, HasDefault
    OpenZWaveDotNet.ZWOptionType Bool = 1 : Public, Static, Literal, HasDefault
    OpenZWaveDotNet.ZWOptionType Int = 2 : Public, Static, Literal, HasDefault
    OpenZWaveDotNet.ZWOptionType String = 3 : Public, Static, Literal, HasDefault
